<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<system.diagnostics>
		<!-- Two techniques are used here for adding trace listeners,
		     as numbered below, starting with 1-1 near the bottom. -->
		<sources>
			<source
				name="traceSourceEx"
				switchName="sourceSwitch"
				switchType="System.Diagnostics.SourceSwitch">

				<listeners>
					<remove name="Default"/>

					<!-- 1-2) (see 1-1 below) Adding that shared listener by name to the trace source's listeners collection. -->
					<add name="mySharedListener"/>

					<!-- 2) Defining a listener directly in the trace source... -->
					<add
						name="console"
						type="System.Diagnostics.ConsoleTraceListener">

						<!-- Our filters are initialized with different source levels, which results 
							 in some messages being written by only one of the two listeners. -->
						<filter
							type="System.Diagnostics.EventTypeFilter"
							initializeData="Warning"/>
					</add>
				</listeners>
			</source>
		</sources>

		<switches>
			<!-- The "value" of a switch specifies one of the values from the
			     System.Diagnostics.SourceLevels enum, which are:
				 Off
				 Critical
				 Error
				 Warning
				 Information
				 Verbose
				 ActivityTracing (allows TraceEventType.Stop, Start, Suspend, Transfer, and Resume events through)
				 All
				 
				 Specifying any value from the above list (except ActivityTracing)
				 means that that level as well as all levels above it are allowed.
				 Off and All are special values that are self-explanatory, but to
				 be clear, Off doesn't allow any events through and All allows all
				 events through.
				 
				 Since Critical is effectively at the top of the list, specifying
				 this value allows only TraceEventType.Critical events through.

				Since Verbose is effectively at the bottom of the list, specifying
				this value allows TraceEventType.Critical, Error, Warning,
				Information, and Verbose events through.

				In the present case, we have specified Warning, which allows only
				TraceEventType.Critical, Error, and Warning events through.
			-->
			<add name="sourceSwitch" value="Warning"/>
		</switches>

		<!-- 1-1) Adding a listener to the shared listeners collection and then... (see 1-2 above) -->
		<sharedListeners>
			<add
				name="mySharedListener"
				type="System.Diagnostics.TextWriterTraceListener"
				initializeData="mySharedListener.log">

				<filter
					type="System.Diagnostics.EventTypeFilter"
					initializeData="Error"/>
			</add>
		</sharedListeners>
	</system.diagnostics>
	<startup>
		<supportedRuntime
			version="v4.0"
			sku=".NETFramework,Version=v4.5" />
	</startup>
</configuration>